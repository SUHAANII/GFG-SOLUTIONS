question: Stickler the thief wants to loot money from the houses arranged in a line. He cannot loot two consecutive houses and aims to maximize his total loot.
Given an array, arr[] where arr[i] represents the amount of money in the i-th house.
Determine the maximum amount he can loot.

code:

class Solution {
public:
    // Function to find the maximum sum of non-adjacent elements in the array
    int findMaxSum(vector<int>& arr) {
        // Get the size of the array
        int n = arr.size();
        
        // Initialize variables to keep track of the maximum sums
        int prev2 = 0;       // Maximum sum excluding the previous element
        int prev = arr[0];   // Maximum sum including the first element
        
        // Iterate through the array starting from the second element
        for (int i = 1; i < n; i++) {
            // Calculate the maximum sum if we do not take the current element
            int not_take = prev;          
            
            // Calculate the maximum sum if we take the current element
            int take = arr[i] + prev2;    
            
            // The current maximum sum is the maximum of taking or not taking the current element
            int curr = max(take, not_take);

            // Update prev2 and prev for the next iteration
            prev2 = prev; // Move prev to prev2 for the next position
            prev = curr;  // Update prev to the current maximum sum
        }
        
        // Return the maximum sum found
        return prev;
    }
};
