question: You are given an integer array arr[]. Your task is to find the smallest positive number missing from the array.

Note: Positive number starts from 1. The array can have negative integers too.

code:

class Solution {
public:
    int missingNumber(vector<int> &arr) {
        // Get the size of the input array
        int n = arr.size();

        // Create an unordered map to store the frequency of each number in the array
        unordered_map<int, int> mp;

        // Iterate through the array and populate the map with the count of each number
        for (int i = 0; i < n; i++) {
            mp[arr[i]]++; // Increment the count for the current number
        }

        // Initialize a variable to start checking for the missing number from 1
        int i = 1;

        // While the map contains the current number, increment i to check the next number
        while (mp.count(i)) {
            i++; // Move to the next integer
        }

        // Return the first missing number that was not found in the map
        return i;
    }
};
