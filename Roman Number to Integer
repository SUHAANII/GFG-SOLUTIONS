question: Given a string s in Roman number format, your task is to convert it to an integer. Various symbols and their values are given below.
Note: I = 1, V = 5, X = 10, L = 50, C = 100, D = 500, M = 1000

code:
class Solution {
public:
    // Function to convert a Roman numeral string to its decimal (integer) equivalent
    int romanToDecimal(string &s) {
        // Create a mapping of Roman numeral characters to their integer values
        unordered_map<char,int> mpp = {
            {'I', 1},   // 1
            {'V', 5},   // 5
            {'X', 10},  // 10
            {'L', 50},  // 50
            {'C', 100}, // 100
            {'D', 500}, // 500
            {'M', 1000} // 1000
        };
        
        int sum = 0; // Variable to store the total sum of the decimal value
        int n = s.size() - 1; // Get the index of the last character in the string
        
        // Iterate through the string from the first character to the second last character
        for (int i = 0; i < n; i++) {
            // If the current character is less than the next character
            if (mpp[s[i]] < mpp[s[i + 1]]) {
                // Subtract the value of the current character from the sum
                sum -= mpp[s[i]];
            } else {
                // Otherwise, add the value of the current character to the sum
                sum += mpp[s[i]];
            }
        }
        
        // Add the value of the last character to the sum (since it has no next character to compare)
        sum += mpp[s[n]];
        
        // Return the total sum, which is the decimal representation of the Roman numeral
        return sum;
    }
};
