question: A celebrity is a person who is known to all but does not know anyone at a party. A party is being organized by some people. A square matrix mat[][] of size n*n is used to represent people at the party such that if an element of row i and column j is set to 1 it means ith person knows jth person. You need to return the index of the celebrity in the party, if the celebrity does not exist, return -1.

Note: Follow 0-based indexing.

code:

class Solution {
public:
    int celebrity(vector<vector<int>>& mat) {
        // Get the number of people (n) from the size of the matrix
        int n = mat.size();
        
        // Initialize a vector to keep track of the "in-degree" of each person
        vector<int> in(n, 0);
        
        // Iterate through the matrix to calculate the in-degrees
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                // If person i knows person j
                if (mat[i][j]) {
                    // Increment the in-degree of person j
                    in[j]++;
                    // Decrement the in-degree of person i because they cannot be a celebrity
                    in[i]--;
                }
            }
        }
        
        // Variable to store the index of the celebrity
        int ans = -1;
        
        // Check the in-degree array for a celebrity candidate
        for (int i = 0; i < n; i++) {
            // A celebrity is known by n-1 people and does not know anyone else
            if (in[i] == n - 1) return i; // Return the index of the celebrity
        }
        
        // If no celebrity is found, return -1
        return -1;
    }
};
