Question: Given an array arr[ ] of integers, the task is to find the next greater element for each element of the array in order of their appearance in the array. Next greater element of an element in the array is the nearest element on the right which is greater than the current element.
If there does not exist next greater of current element, then next greater element for current element is -1. For example, next greater of the last element is always -1.


code:

public:
    // Function to find the next greater element for each element of the array.
    vector<int> nextLargerElement(vector<int>& arr) {
        // Get the size of the input array
        int n = arr.size();
        
        // Initialize a result vector with -1, indicating no greater element found
        vector<int> res(n, -1);
        
        // Create a stack to keep track of elements for which we are finding the next greater element
        stack<int> st;
        
        // Push the last element of the array onto the stack
        st.push(arr[n - 1]);
        
        // Iterate from the second last element to the first
        for (int i = n - 2; i >= 0; i--) {
            // While the stack is not empty and the top of the stack is less than or equal to the current element
            while (!st.empty() && st.top() <= arr[i]) {
                // Pop elements from the stack as they cannot be the next greater element for the current element
                st.pop();
            }
            
            // If the stack is not empty after popping, the top of the stack is the next greater element
            if (!st.empty()) {
                res[i] = st.top();
            }
            
            // Push the current element onto the stack for future comparisons
            st.push(arr[i]);
        }
        
        // Return the result vector containing the next greater elements
        return res;
    }
};
