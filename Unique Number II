question: Given an array arr[] containing 2*n + 2 positive numbers, out of which 2*n numbers exist in pairs whereas only two number occur exactly once and are distinct. Find the other two numbers. Return the answer in increasing order.

code:

class Solution {
public:
    // Function to find all elements that appear exactly once in the array
    vector<int> singleNum(vector<int>& arr) {
        // Declare a vector to store the result
        vector<int> ans;
        
        // Create an unordered map to count occurrences of each number
        unordered_map<int,int> mp;
        
        // Iterate through each element in the input array
        for(auto it: arr) {
            // Increment the count of each number in the map
            mp[it] += 1;
        }
        
        // Iterate through the map to find elements that appear exactly once
        for(auto it: mp) {
            // Check if the count of the current number is 1
            if(it.second == 1) {
                // If so, add it to the result vector
                ans.push_back(it.first);
            }
        }
        
        // Sort the result vector in ascending order
        sort(ans.begin(), ans.end());
        
        // Return the vector containing elements that appear exactly once
        return ans;
    }
};
