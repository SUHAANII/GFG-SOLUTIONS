Question: Given a binary tree, the diameter (also known as the width) is defined as the number of edges on the longest path between two leaf nodes in the tree. This path may or may not pass through the root. Your task is to find the diameter of the tree.
code:
  
class Solution {
    private:
    int height( Node*root){
        if(root==nullptr){
            return 0;
        }
    
        int left = height(root->left);
        int right = height(root->right);
        int ans = max(left , right )+1;
        return ans;
    }
    
  public:
    int diameter(Node* root) {
        // Your code here
        if(root==nullptr){
        return 0;
    }
    int op1 = diameter(root->left);
    int op2 = diameter(root->right);
    int op3 = height(root->left)+height(root->right);
    int ans = max(op1,max(op2,op3));
    return ans;
}
};
or........................

int solve(Node* root,int &maxi){
     if(root==nullptr) return -1;
     
     int leftheight=1+solve(root->left,maxi);
     int rightheight=1+solve(root->right,maxi);
     // finding diameter upto that node
     int dia=leftheight+rightheight;
      maxi=max(maxi,dia);
      // returning max so that it will be used for upper nodes
      return max(leftheight,rightheight);
 }
    int diameter(Node* root) {
        // Your code here
        int maxi=0;
        int t=solve(root,maxi);
        return maxi;
